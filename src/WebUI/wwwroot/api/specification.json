{
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v9.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "CleanArchitecture API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Clients": {
      "get": {
        "tags": [
          "Clients"
        ],
        "operationId": "Clients_GetClients",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "operationId": "Clients_CreateClient",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddClientCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Clients/Email": {
      "get": {
        "tags": [
          "Clients"
        ],
        "operationId": "Clients_GetClientByEmail",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Depots": {
      "get": {
        "tags": [
          "Depots"
        ],
        "operationId": "Depots_GetDepots",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepotDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Depots"
        ],
        "operationId": "Depots_CreateDepot",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDepotCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Depots/byId": {
      "get": {
        "tags": [
          "Depots"
        ],
        "operationId": "Depots_GetDepotById",
        "parameters": [
          {
            "name": "depotId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepotDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employees/Id": {
      "get": {
        "tags": [
          "Employees"
        ],
        "operationId": "Employees_GetEmployeeById",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employees": {
      "get": {
        "tags": [
          "Employees"
        ],
        "operationId": "Employees_GetEmployees",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeRoleDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "operationId": "Employees_CreateEmployee",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmployeeCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employees"
        ],
        "operationId": "Employees_UpdateEmployee",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployeeCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employees/delete": {
      "delete": {
        "tags": [
          "Employees"
        ],
        "operationId": "Employees_DeleteEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reservation/Id": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "operationId": "Reservation_GetReservationsbyClientId",
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReservationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reservation": {
      "post": {
        "tags": [
          "Reservation"
        ],
        "operationId": "Reservation_ReserveVehicle",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReserveVehicleCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reservation/close": {
      "put": {
        "tags": [
          "Reservation"
        ],
        "operationId": "Reservation_CloseReservation",
        "parameters": [
          {
            "name": "reservationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "endDepotId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "nbKilometers",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseReservationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reservation/start": {
      "put": {
        "tags": [
          "Reservation"
        ],
        "operationId": "Reservation_StartReservation",
        "parameters": [
          {
            "name": "reservationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_GetRoles",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Vehicles/available": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "operationId": "Vehicles_GetavailableVehicles",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          },
          {
            "name": "depotId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Vehicles/depot": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "operationId": "Vehicles_GetVehiclesByDepot",
        "parameters": [
          {
            "name": "depotId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Vehicles": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "operationId": "Vehicles_GetVehicles",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vehicles"
        ],
        "operationId": "Vehicles_AddNewVehicle",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddVehicleCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ClientDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "AddClientCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "eMail": {
            "type": "string"
          }
        }
      },
      "DepotDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/CountryNameDto"
          },
          "vehiclesCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CountryNameDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AddDepotCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EmployeeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "EmployeeRoleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "roleDto": {
            "$ref": "#/components/schemas/RoleDto"
          }
        }
      },
      "RoleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "CreateEmployeeCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "mail": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UpdateEmployeeCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "mail": {
            "type": "string"
          }
        }
      },
      "ReservationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "vehicle": {
            "$ref": "#/components/schemas/VehicleDto"
          },
          "reservationStatus": {
            "$ref": "#/components/schemas/ReservationStatus"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "planPlanType": {
            "$ref": "#/components/schemas/PlanType"
          },
          "planStartDepotId": {
            "type": "integer",
            "format": "int32"
          },
          "planEndDepotId": {
            "type": "integer",
            "format": "int32"
          },
          "planKilometerPrice": {
            "type": "number",
            "format": "double"
          },
          "kilometers": {
            "type": "number",
            "format": "double"
          },
          "planBonusRate": {
            "type": "number",
            "format": "double"
          },
          "vehicleBrandNotoriety": {
            "$ref": "#/components/schemas/CarNotoriety"
          }
        }
      },
      "VehicleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "immatriculation": {
            "type": "string"
          },
          "brand": {
            "$ref": "#/components/schemas/BrandDto"
          }
        }
      },
      "BrandDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "model": {
            "type": "string"
          }
        }
      },
      "ReservationStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Booked",
          "Pending",
          "Comlpeted",
          "Cancelled"
        ],
        "enum": [
          1,
          2,
          3,
          4
        ]
      },
      "PlanType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Kilometric",
          "Fee"
        ],
        "enum": [
          1,
          2
        ]
      },
      "CarNotoriety": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Car",
          "van",
          "Suv",
          "Truck",
          "Luxury"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          25
        ]
      },
      "ReserveVehicleCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "planType": {
            "$ref": "#/components/schemas/PlanType"
          },
          "vehicleId": {
            "type": "integer",
            "format": "int32"
          },
          "startDepotId": {
            "type": "integer",
            "format": "int32"
          },
          "endDepotId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CloseReservationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "client": {
            "$ref": "#/components/schemas/ClientDto"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "vehicle": {
            "$ref": "#/components/schemas/VehicleDto"
          },
          "vehicleId": {
            "type": "integer",
            "format": "int32"
          },
          "plan": {
            "$ref": "#/components/schemas/PlanDto"
          },
          "planId": {
            "type": "integer",
            "format": "int32"
          },
          "reservationStatus": {
            "$ref": "#/components/schemas/ReservationStatus"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "kilometers": {
            "type": "number",
            "format": "double"
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "PlanDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bonusRate": {
            "type": "number",
            "format": "double"
          },
          "planType": {
            "$ref": "#/components/schemas/PlanType"
          },
          "startDepot": {
            "$ref": "#/components/schemas/DepotDto"
          },
          "startDepotId": {
            "type": "integer",
            "format": "int32"
          },
          "endDepot": {
            "$ref": "#/components/schemas/DepotDto"
          },
          "endDepotId": {
            "type": "integer",
            "format": "int32"
          },
          "kilometerPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "AddVehicleCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "immatriculation": {
            "type": "string"
          },
          "depotId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "carNotoriety": {
            "$ref": "#/components/schemas/CarNotoriety"
          },
          "kilometer": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}